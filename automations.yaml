############ LUCY's DOORBELL ############

- alias: "Lucy's Doorbell TTS"
  trigger:
  - entity_id: switch.10006abf86
    from: 'off'
    platform: state
    to: 'on'
  action:
  - service: notify.alexa_media
    data_template:
      target: 
        - media_player.bedroom
        - media_player.basement
        - media_player.basement
        - media_player.echo_show
      data:
        type: tts
      message: It sounds like Lucy wants to go outside!
  - service: tts.google_say
    data:
      message: It sounds like Lucy wants to come outside!
    entity_id:
      - media_player.backyard_speaker
      

- alias: "Lucy's Doorbell SMS"
  trigger:
  - entity_id: switch.10006abf86
    from: 'off'
    platform: state
    to: 'on'
  action:
    service: notify.lucy_doorbell
    data:
      title: WOOF!
      message: Lucy is letting you know that she wants outside!
      
      

############ ALEXA REPORTS ############
- alias: "Dummy Light Actions"
  trigger:
  - platform: state
    entity_id: light.dummy_light
    to: 'on'
  condition:
  action:
  - service_template: >-
        {% if (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 50 %}      
          switch.turn_on
        {% elif (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 60 %}
          switch.turn_off
        {% else %}
         {{ states('light.dummy_light.attributes.brightness') }}
        {% endif %}
    entity_id: switch.deluge_switch
        
- alias: "Alexa Report"
  trigger:
  - platform: state
    entity_id: light.dummy_light
    to: 'on'
  condition:
  action:
  - service: alexa_media.update_last_called
  - delay: 00:00:01
  - service: notify.alexa_media
    data_template:
      target: 
        -  '{{ states.sensor.last_alexa.state }}' 
      data:
        type: tts
      message: >-
        {% if (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 10 %}
          The current pool temperature is {{states('sensor.converted_pool_temp')|replace('.', ' point ') }} degrees
        {% elif (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 20 %}
          The current download speed is {{states('sensor.speedtest_download')|replace('.', ' point ') }} mega bits per second
        {% elif (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 30 %}
          Chelsea is {{states('person.chelsea')}} right now
        {% elif (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 40 %}
          Patrick is {{states('person.patrick')}} right now 
        {% elif (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 50 %}
          All torrent downloads have been resumed   
        {% elif (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 60 %}
          All torrent downloads have been paused      
        {% elif (states.light.dummy_light.attributes.brightness | int / 255 * 100 ) | round  == 70 %}
          The temperature in the nursery is {{states('sensor.nursery_temperature')|replace('.', ' point ') }} degrees
        {% else %}
         {{ states('light.dummy_light.attributes.brightness') }}
        {% endif %}
  - service: light.turn_off
    entity_id: light.dummy_light
    
    

############ LOCATION ############

- alias: "Chelsea home boolean"
  trigger:
  - entity_id: person.chelsea
    platform: state
    from: 'not_home' 
    to: 'home' 
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.chelsea_home
  
- alias: "Chelsea away boolean"  
  trigger:
  - entity_id: person.chelsea
    platform: state
    from: 'home' 
    to: 'not_home' 
    for:
      minutes: 10
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.chelsea_home
    
- alias: "Chelsea is home"
  trigger:
  - entity_id: input_boolean.chelsea_home
    from: 'off' 
    platform: state
    to: 'on' 
  condition:
  - after: '08:00:00'
    before: '22:00:00'
    condition: time
  action:
  - service: tts.google_say
    data:
      message: It looks like Chelsea is home now
    entity_id:
      - media_player.living_room_speaker
      - media_player.backyard_speaker
  - service: notify.alexa_media
    data:
      message: It looks like Chelsea is home now
    entity_id:
      - media_player.bedroom
      - media_player.basement
      - media_player.garage
    
- alias: "Patrick is home"
  trigger:
  - entity_id: person.patrick
    from: 'not_home' 
    platform: state
    to: 'home' 
  condition:
  - after: '08:00:00'
    before: '22:00:00'
    condition: time
  action:
  - service: tts.google_say
    data:
      message: It looks like Patrick is home now
    entity_id:
      - media_player.living_room_speaker
      - media_player.backyard_speaker
  - service: notify.alexa_media
    data:
      message: It looks like Patrick is home now
    entity_id:
      - media_player.bedroom
      - media_player.basement
      - media_player.garage
    
- alias: "Chelsea leaving work"
  trigger:
  - platform: zone
    event: leave
    zone: zone.chelsea_work
    entity_id: person.chelsea
  action:
  - service: notify.alexa_media
    data:
      message: It looks like Chelsea is finished work now
    entity_id:
      - media_player.bedroom
      - media_player.basement
      - media_player.garage
  - service: tts.google_say
    data:
      message: It looks like Chelsea is finished work now
    entity_id:
      - media_player.living_room_speaker
      - media_player.backyard_speaker
      
      
      
############ POOL AUTOMATION ############      

- alias: "Pool Pump Timer ON"
  trigger:
    - platform: time
      at: '23:00:00'
    - platform: time
      at: '05:00:00'
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '13:00:00'
    - platform: time
      at: '17:00:00'
    - platform: time
      at: '20:00:00'
  action:
    - service: switch.turn_on
      entity_id: switch.hac1_channel_1
      
- alias: "Pool Pump Timer OFF"
  trigger:
    - platform: time
      at: '02:00:00'
    - platform: time
      at: '07:00:00'
    - platform: time
      at: '11:00:00'
    - platform: time
      at: '15:00:00'
    - platform: time
      at: '18:00:00'
    - platform: time
      at: '21:00:00'
  action:
    - service: switch.turn_off
      entity_id: switch.hac1_channel_1

- alias: "Turn Heater off with Pump-OFF and Timer-ON"
  trigger:
  - platform: state
    entity_id: switch.hac1_channel_1
    to: 'off'
  - platform: state
    entity_id: group.poolpumptimer
    to: 'on'
  action:
    - service: switch.turn_off
      entity_id:
        - switch.hac1_channel_2
        - switch.hac1_software_switch_1

- alias: "Turn Pump on with Heater-ON"
  trigger:
  - platform: state
    entity_id: switch.hac1_channel_2
    to: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.hac1_channel_1
    - service: homeassistant.turn_off
      entity_id: group.poolpumptimer
      
- alias: "Pool Thermostat ON (From Switch)"
  trigger:
  - platform: state
    entity_id: switch.hac1_software_switch_1
    to: 'on'
  action:
    - service: climate.turn_on
      entity_id: climate.pool_temperature
      
- alias: "Pool Thermostat OFF (From Switch)"
  trigger:
  - platform: state
    entity_id: switch.hac1_software_switch_1
    to: 'off'
  action:
    - service: climate.turn_off
      entity_id: climate.pool_temperature
      
- alias: "Pool Thermostat ON"
  trigger:
  - platform: state
    entity_id: switch.pool_heater_thermostat
    to: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id: group.poolpumptimer
    - service: switch.turn_on
      entity_id:
      - switch.hac1_channel_1
      
- alias: "Pool Thermostat OFF"
  trigger:
  - platform: state
    entity_id: switch.pool_heater_thermostat
    to: 'off'
  action:
    - delay: '00:01:30'
    - service: homeassistant.turn_on
      entity_id: group.poolpumptimer

- alias: "Service Mode ON"
  trigger:
  - entity_id: switch.hac1_software_switch_2
    platform: state
    to: 'on'
  action:
    - service: switch.turn_off
      entity_id:
      - switch.hac1_channel_1
      - switch.hac1_channel_2
      - switch.hac1_channel_3
      - switch.hac1_channel_4
      - switch.hac1_channel_5
      - switch.hac1_channel_6
      - switch.hac1_channel_7
      - switch.hac1_channel_8
      - switch.hac1_software_switch_1
      - switch.pool_heater_thermostat
    - service: homeassistant.turn_off
      entity_id:
      - group.poolpumptimer
      
- alias: "Service Mode OFF"
  trigger:
  - entity_id: switch.hac1_software_switch_2
    platform: state
    to: 'off'
  action:
    - service: homeassistant.turn_on
      entity_id:
      - group.poolpumptimer
    - service: switch.turn_on
      entity_id:
      - switch.hac1_channel_1
      
      

############ ALARM SYSTEM ############

- alias: 'Alarm Activated from Keypad'
  trigger:
    - platform: state
      entity_id: input_boolean.alarm_toggle_keypad
      to: 'on'
  action:
    service: alarm_control_panel.alarm_arm_away
    data: !secret toggle_alarm
    
       
- alias: 'Alarm Deactivated from Keypad'
  trigger:
    - platform: state
      entity_id: input_boolean.alarm_toggle_keypad
      to: 'off'
    - platform: state
      entity_id: input_boolean.alarm_toggle_switch
      to: 'off'
  action:
    - service: alarm_control_panel.alarm_disarm
      data: !secret toggle_alarm
        
- alias: 'Alarm Activated'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_away'
  action:
    - service: media_player.media_stop
      data_template:
        entity_id: media_player.living_room_speaker 
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: 0.2      
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living_room_speaker
        media_content_id: !secret alarm_beep
        media_content_type: music 
        
- alias: "Alarm state changes from Disarmed"
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      from: 'disarmed'
  action:
    - service: input_boolean.turn_on
      entity_id:
        - input_boolean.alarm_toggle_ha
        - input_boolean.alarm_toggle_keypad
    
- alias: "Alarm Deactivated"      
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'disarmed'
    - platform: state
      entity_id: input_boolean.alarm_toggle_switch
      to: 'off'
  action:
    - service: media_player.media_stop
      data_template:
        entity_id: media_player.living_room_speaker 
    - service: script.turn_off
      data:
        entity_id: script.flash_livingroom
    - service: script.turn_off
      data:
        entity_id: script.flash_loop
    - delay: '00:00:01'   
    - service: tts.google_say
      data:
        message: The alarm has been disabled
      entity_id:
       - media_player.living_room_speaker
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Livingroom"
        scene_name: "Relax"  
    - delay: '00:00:02'
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: 0.2
    - service: light.turn_off
      entity_id: light.livingroom
    - service: switch.turn_off
      entity_id: switch.alarm_toggle
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.alarm_toggle_ha
        - input_boolean.alarm_toggle_keypad
        - input_boolean.panic_mode_keypad
        - input_boolean.alarm_toggle_switch
        - input_boolean.panic_mode_keypad
    
- alias: 'Warning beeps while alarm pending'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'pending' 
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: 0.2      
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living_room_speaker
        media_content_id: !secret alarm_pending
        media_content_type: music
        
- alias: 'Trigger alarm while armed'
  trigger:
    - platform: state
      entity_id: switch.alarm_toggle
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.home_alarm
      
- alias: "Alarm Triggered"      
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'triggered'
  action:
    - service: homeassistant.turn_off
      entity_id: group.livingroom
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: 1   
    - delay: '00:00:01'  
    - service: tts.google_say
      data:
        message: An intruder has been detected
      entity_id:
       - media_player.living_room_speaker
    - delay: '00:00:02'
    - service: script.turn_on
      data:
        entity_id: script.flash_livingroom
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living_room_speaker
        media_content_id: !secret alarm_sound
        media_content_type: music      
    - service: camera.snapshot
      data:
        entity_id: camera.front_door_camera
        filename: /config/www/cam_captures/frontdoor.jpg
    - service: notify.mobile_app_patricks_phone
      data: 
        message: "An intruder has been detected!"
        title: "! ! ALERT ! !"
        data: 
          android:
            notification:
              image: !secret frontdoor_snapshot

- alias: 'Panic Activated from Keypad'
  trigger:
    - platform: state
      entity_id: input_boolean.panic_mode_keypad
      to: 'on'
  action:
    - service: input_boolean.turn_on
      entity_id:
        - input_boolean.alarm_toggle_switch
    - service: homeassistant.turn_off
      entity_id: group.livingroom
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: 1   
    - delay: '00:00:01'
    - service: script.turn_on
      data:
        entity_id: script.flash_livingroom
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living_room_speaker
        media_content_id: !secret alarm_sound
        media_content_type: music 
    - delay: '00:10:00'
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.alarm_toggle_switch

 ########### MOTION DETECTION ##################
 
- alias: 'Turn off Nursery light 10 minutes after last movement'
  trigger:
    platform: state
    entity_id: binary_sensor.nursery_motion
    to: 'off'
    for:
      minutes: 10
  action:
    service: light.turn_off
    entity_id: light.nursery
 
- alias: 'Motion in Nursery at night'
  trigger:
    - platform: state
      entity_id: binary_sensor.nursery_motion
      to: 'on'
  condition:
  - condition: time
    after: '20:00:00'
    before: '06:59:59'
  - condition: state
    entity_id: light.nursery
    state: 'off'
  action:
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Nursery"
        scene_name: "Nightlight"
    - delay: '00:00:15'    
 
- alias: 'Motion in Nursery during day'
  trigger:
    - platform: state
      entity_id: binary_sensor.nursery_motion
      to: 'on'
  condition:
  - condition: time
    after: '07:00:00'
    before: '19:59:59'
  - condition: state
    entity_id: light.nursery
    state: 'off'
  action:
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Nursery"
        scene_name: "Bright" 
    - service: notify.alexa_media
      data_template:
        target:
          - media_player.nursery
        data:
          type: tts
        message: Hello there
    - delay: '00:00:15' 
    
- alias: 'Motion in Bedroom during day'
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_motion
      to: 'on'
  condition:
  - condition: time
    after: '10:00:00'
    before: '19:59:59'
  - condition: state
    entity_id: light.bedroom
    state: 'off'
  action:
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Bedroom"
        scene_name: "Bright" 
    - service: notify.alexa_media
      data_template:
        target:
          - media_player.bedroom
        data:
          type: tts
        message: Hello there
    - delay: '00:00:15'    
    
- alias: 'Front Door Light on from Front Door Camera Motion'
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door_camera_motion
    to: 'on'
  condition:
  - condition: state
    entity_id: timer.5_seconds
    state: 'idle' 
  - condition: state
    entity_id: sun.sun
    state: below_horizon 
  - condition: state
    entity_id: switch.sonoff_1000a02089
    state: 'off'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.fdl_auto
  #- delay: '00:00:01'
  - service: switch.turn_on
    entity_id: switch.sonoff_1000a02089

- alias: '5 minute light timer'
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door_camera_motion
    to: 'off'
    for:
      minutes: 5
  condition:
  - condition: state
    entity_id: switch.sonoff_1000a02089
    state: 'on' 
  - condition: state
    entity_id: input_boolean.fdl_manual
    state: 'off'
  action:
  - service: timer.start
    entity_id: timer.5_seconds
  - service: switch.turn_off
    entity_id: switch.sonoff_1000a02089
    
- alias: 'Start timer after turning off Front Door Light'
  trigger:
  - platform: state
    entity_id: switch.sonoff_1000a02089
    to: 'off'
  condition:
  - condition: state
    entity_id: timer.5_seconds
    state: 'idle'
  action:
  - service: timer.start
    entity_id: timer.5_seconds
    
- alias: 'Front Door Light turned off' 
  trigger:
  - platform: state
    entity_id: switch.sonoff_1000a02089
    to: 'off'
  action:
  - service: input_boolean.turn_off 
    entity_id: input_boolean.fdl_manual
  - service: input_boolean.turn_off
    entity_id: input_boolean.fdl_auto
    
- alias: 'Front Door Light turned on manually' 
  trigger:
  - platform: state
    entity_id: switch.sonoff_1000a02089 
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.fdl_auto
    state: 'off'
  action: 
  - service: input_boolean.turn_on
    entity_id: input_boolean.fdl_manual
  
